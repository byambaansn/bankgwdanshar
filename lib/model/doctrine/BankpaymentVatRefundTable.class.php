<?php

/**
 * BankpaymentVatRefundTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BankpaymentVatRefundTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object BankpaymentVatRefundTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BankpaymentVatRefund');
    }
    
    public static function insert($trans)
    {
        try {
            $bankPaymentVatRefund = new BankpaymentVatRefund();
            $bankPaymentVatRefund->old_bankpayment_id = (int) isset($trans['old_bankpayment_id']) ? $trans['old_bankpayment_id'] : 0;
            $bankPaymentVatRefund->bankpayment_id = (int) isset($trans['bankpayment_id']) ? $trans['bankpayment_id'] : 0;
            $bankPaymentVatRefund->payment_type_id = $trans['payment_type_id'];
            $bankPaymentVatRefund->refund_bill_id = isset($trans['refund_bill_id']) ? $trans['refund_bill_id'] : null;
            $bankPaymentVatRefund->refund_type = $trans['refund_type'];
            $bankPaymentVatRefund->type = $trans['type'];
            $bankPaymentVatRefund->old_value = $trans['old_value'];
            $bankPaymentVatRefund->new_value = $trans['new_value'];
            $bankPaymentVatRefund->refund_desc = $trans['refund_desc'];
            $bankPaymentVatRefund->refund_user = $trans['user_name'];
            $bankPaymentVatRefund->refund_date = date('Y-m-d H:i:s');
            $bankPaymentVatRefund->save();
            return $bankPaymentVatRefund;
        } catch (Exception $exc) { }
        return FALSE;
    }
    
    public static function getList(sfWebRequest $request)
    {
        $pdo = Doctrine_Manager::connection()->getDbh();
        
//        $request = sfContext::getInstance()->getRequest();
        
        $dateFrom = $request->getParameter('dateFrom') ? $request->getParameter('dateFrom') : date('Y-m-d');
        $dateTo = $request->getParameter('dateTo') ? $request->getParameter('dateTo') : date('Y-m-d');
        $orderDesc = $request->getParameter('orderDesc');
        $number = $request->getParameter('number');
        $contract = $request->getParameter('contract');
        $type = $request->getParameter('payment_type');
        $refundType = $request->getParameter('refund_type');
        
        if ($orderDesc) {
            $orderDesc = " AND
                CASE WHEN B.vendor_id = 9 THEN D.order_p 
                    WHEN B.vendor_id = 10 THEN E.order_p
                    WHEN B.vendor_id = 1 THEN F.order_p
                    WHEN B.vendor_id = 11 THEN G.order_p
                    WHEN B.vendor_id = 8 THEN H.order_p
                    WHEN B.vendor_id = 12 THEN I.order_p
                    WHEN B.vendor_id = 13 THEN J.order_p END LIKE '%".$orderDesc."%'";
        }
        
        $where = "";
        if ($type) {
            $where .= " AND B.type = '".$type."'";
        }
        
        if ($refundType == 1) {
            $where .= " AND IFNULL(A.type,'') = 'REFUND'";
        }
        else {
            $where .= " AND IFNULL(A.type,'') <> 'REFUND'";
        }
        
        if ($number) {
            $where .= " AND B.number LIKE '%".$number."%'";
        }
        
        if ($contract) {
            $where .= " AND (B.contract_number = '".$contract."' OR C.contract_number = '".$contract."')";
        }
        
        $query = "
            SELECT CASE WHEN B.vendor_id = 9 THEN D.order_id 
                        WHEN B.vendor_id = 10 THEN E.order_id
                        WHEN B.vendor_id = 1 THEN F.order_id
                        WHEN B.vendor_id = 11 THEN G.order_id
                        WHEN B.vendor_id = 8 THEN H.order_id
                        WHEN B.vendor_id = 12 THEN I.order_id
                        WHEN B.vendor_id = 13 THEN J.order_id END AS order_id,
                   CASE WHEN B.vendor_id = 9 THEN D.bank_account 
                        WHEN B.vendor_id = 10 THEN E.bank_account
                        WHEN B.vendor_id = 1 THEN F.bank_account
                        WHEN B.vendor_id = 11 THEN G.bank_account
                        WHEN B.vendor_id = 8 THEN H.bank_account
                        WHEN B.vendor_id = 12 THEN I.bank_account
                        WHEN B.vendor_id = 13 THEN J.bank_account END AS bank_account,
                   CASE WHEN B.vendor_id = 9 THEN D.order_p
                        WHEN B.vendor_id = 10 THEN E.order_p
                        WHEN B.vendor_id = 1 THEN F.order_p
                        WHEN B.vendor_id = 11 THEN G.order_p
                        WHEN B.vendor_id = 8 THEN H.order_p
                        WHEN B.vendor_id = 12 THEN I.order_p
                        WHEN B.vendor_id = 13 THEN J.order_p END AS order_desc,
                   CASE WHEN B.vendor_id = 9 THEN D.order_date
                        WHEN B.vendor_id = 10 THEN E.order_date
                        WHEN B.vendor_id = 1 THEN F.order_date
                        WHEN B.vendor_id = 11 THEN G.order_date
                        WHEN B.vendor_id = 8 THEN H.order_date
                        WHEN B.vendor_id = 12 THEN I.order_date
                        WHEN B.vendor_id = 13 THEN J.order_date END AS order_date,
                   CASE WHEN B.vendor_id = 9 THEN D.order_amount
                        WHEN B.vendor_id = 10 THEN E.order_amount
                        WHEN B.vendor_id = 1 THEN F.order_amount
                        WHEN B.vendor_id = 11 THEN G.order_amount
                        WHEN B.vendor_id = 8 THEN H.order_amount
                        WHEN B.vendor_id = 12 THEN I.order_amount
                        WHEN B.vendor_id = 13 THEN J.order_amount END AS order_amount,
                   IFNULL(C.paid_amount,0) paid_amount,
                   CASE WHEN B.type = 1 THEN 'Мобинет'
                        WHEN B.type = 2 THEN 'Улуснет'
                        WHEN B.type = 3 THEN 'Мобинет УТ'
                        WHEN B.type = 4 THEN 'Яриа'
                        WHEN B.type = 5 THEN 'Цэнэглэгч карт'
                        WHEN B.type = 6 THEN 'Дата'
                        WHEN B.type = 7 THEN 'WiFi карт' END AS item_type,
                   CASE WHEN B.type = 1 THEN 'Мобинет'
                        WHEN B.type = 2 THEN 'Улуснет'
                        WHEN B.type = 3 THEN 'Мобинет УТ'
                        ELSE 'Мобиком' END AS vat_company,
                   V.name AS bank_name, B.number, B.contract_number, B.updated_at, A.refund_date, B.username, A.refund_user AS refund_user, PTR.name AS payment_type, A.type , A.refund_desc,
                   CASE WHEN A.refund_type = 'PAYMENTTYPE' THEN 'Биллээс бусад төрлийн үйлчилгээ авсан'
                        WHEN A.refund_type = 'CONTRACT' THEN 'Гэрээ болон утасны дугаар буруу бичсэн'
                        ELSE 'Илүү төлөлт болон төлөлтийг хуваах' END AS refund_type,
                    CASE WHEN A.refund_type LIKE '%CONTRACT%' THEN A.old_value ELSE PT.name END AS old_value,
                    CASE WHEN A.refund_type LIKE '%CONTRACT%' THEN A.new_value ELSE PTN.name END AS new_value,
                    C.username AS new_username, C.updated_at AS new_updated_at
            FROM bankpayment_vat_refund A INNER JOIN bankpayment B ON A.old_bankpayment_id = B.id
                LEFT OUTER JOIN bankpayment C ON A.bankpayment_id = C.id
                LEFT OUTER JOIN bank_khaan D ON B.vendor_id = D.vendor_id AND B.bank_order_id = D.id
                LEFT OUTER JOIN bank_xac E ON B.vendor_id = E.vendor_id AND B.bank_order_id = E.id
                LEFT OUTER JOIN bank_golomt F ON B.vendor_id = F.vendor_id AND B.bank_order_id = F.id
                LEFT OUTER JOIN bank_tdb G ON B.vendor_id = G.vendor_id AND B.bank_order_id = G.id
                LEFT OUTER JOIN bank_savings H ON B.vendor_id = H.vendor_id AND B.bank_order_id = H.id
                LEFT OUTER JOIN bank_capital I ON B.vendor_id = I.vendor_id AND B.bank_order_id = I.id
                LEFT OUTER JOIN bank_capitron J ON B.vendor_id = J.vendor_id AND B.bank_order_id = J.id
                LEFT OUTER JOIN vendor V ON B.vendor_id = V.id
                LEFT OUTER JOIN bank_transaction.payment_type PT ON A.old_value = PT.id
                LEFT OUTER JOIN bank_transaction.payment_type PTN ON A.new_value = PTN.id
                LEFT OUTER JOIN bank_transaction.payment_type PTR ON A.payment_type_id = PTR.id
            WHERE A.refund_date BETWEEN '".$dateFrom . " 00:00:00"."' AND '".$dateTo . " 23:59:59"."' ".$orderDesc.$where;
        $rows = $pdo->query($query)->fetchAll(PDO::FETCH_ASSOC);
//        print_r($query); die();
        return $rows;
    }
}