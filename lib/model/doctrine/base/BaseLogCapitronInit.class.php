<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LogCapitronInit', 'doctrine');

/**
 * BaseLogCapitronInit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $request
 * @property string $response
 * @property string $response_set
 * @property string $error_code
 * @property string $description
 * @property integer $get_success
 * @property integer $set_success
 * @property string $ip
 * @property timestamp $created_at
 * 
 * @method integer         getId()           Returns the current record's "id" value
 * @method string          getRequest()      Returns the current record's "request" value
 * @method string          getResponse()     Returns the current record's "response" value
 * @method string          getResponseSet()  Returns the current record's "response_set" value
 * @method string          getErrorCode()    Returns the current record's "error_code" value
 * @method string          getDescription()  Returns the current record's "description" value
 * @method integer         getGetSuccess()   Returns the current record's "get_success" value
 * @method integer         getSetSuccess()   Returns the current record's "set_success" value
 * @method string          getIp()           Returns the current record's "ip" value
 * @method timestamp       getCreatedAt()    Returns the current record's "created_at" value
 * @method LogCapitronInit setId()           Sets the current record's "id" value
 * @method LogCapitronInit setRequest()      Sets the current record's "request" value
 * @method LogCapitronInit setResponse()     Sets the current record's "response" value
 * @method LogCapitronInit setResponseSet()  Sets the current record's "response_set" value
 * @method LogCapitronInit setErrorCode()    Sets the current record's "error_code" value
 * @method LogCapitronInit setDescription()  Sets the current record's "description" value
 * @method LogCapitronInit setGetSuccess()   Sets the current record's "get_success" value
 * @method LogCapitronInit setSetSuccess()   Sets the current record's "set_success" value
 * @method LogCapitronInit setIp()           Sets the current record's "ip" value
 * @method LogCapitronInit setCreatedAt()    Sets the current record's "created_at" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLogCapitronInit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('log_capitron_init');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('request', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('response', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('response_set', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('error_code', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('description', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('get_success', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('set_success', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ip', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}