<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DeletedPayment', 'transaction');

/**
 * BaseDeletedPayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $transaction_id
 * @property integer $payment_id
 * @property integer $type_id
 * @property string $assignment
 * @property float $amount
 * @property string $description
 * @property integer $status
 * @property string $username
 * @property integer $deleted_user_id
 * @property timestamp $deleted_at
 * 
 * @method integer        getId()              Returns the current record's "id" value
 * @method integer        getTransactionId()   Returns the current record's "transaction_id" value
 * @method integer        getPaymentId()       Returns the current record's "payment_id" value
 * @method integer        getTypeId()          Returns the current record's "type_id" value
 * @method string         getAssignment()      Returns the current record's "assignment" value
 * @method float          getAmount()          Returns the current record's "amount" value
 * @method string         getDescription()     Returns the current record's "description" value
 * @method integer        getStatus()          Returns the current record's "status" value
 * @method string         getUsername()        Returns the current record's "username" value
 * @method integer        getDeletedUserId()   Returns the current record's "deleted_user_id" value
 * @method timestamp      getDeletedAt()       Returns the current record's "deleted_at" value
 * @method DeletedPayment setId()              Sets the current record's "id" value
 * @method DeletedPayment setTransactionId()   Sets the current record's "transaction_id" value
 * @method DeletedPayment setPaymentId()       Sets the current record's "payment_id" value
 * @method DeletedPayment setTypeId()          Sets the current record's "type_id" value
 * @method DeletedPayment setAssignment()      Sets the current record's "assignment" value
 * @method DeletedPayment setAmount()          Sets the current record's "amount" value
 * @method DeletedPayment setDescription()     Sets the current record's "description" value
 * @method DeletedPayment setStatus()          Sets the current record's "status" value
 * @method DeletedPayment setUsername()        Sets the current record's "username" value
 * @method DeletedPayment setDeletedUserId()   Sets the current record's "deleted_user_id" value
 * @method DeletedPayment setDeletedAt()       Sets the current record's "deleted_at" value
 * 
 * @package    BANKGW
 * @subpackage model
 * @author     Belbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDeletedPayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('deleted_payment');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('transaction_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('payment_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('assignment', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('deleted_user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}