<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BankpaymentVatRefund', 'doctrine');

/**
 * BaseBankpaymentVatRefund
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $old_bankpayment_id
 * @property integer $bankpayment_id
 * @property integer $refund_bill_id
 * @property integer $payment_type_id
 * @property string $refund_type
 * @property string $type
 * @property string $old_value
 * @property string $new_value
 * @property string $refund_desc
 * @property string $refund_user
 * @property timestamp $refund_date
 * 
 * @method integer              getId()                 Returns the current record's "id" value
 * @method integer              getOldBankpaymentId()   Returns the current record's "old_bankpayment_id" value
 * @method integer              getBankpaymentId()      Returns the current record's "bankpayment_id" value
 * @method string               getRefundBillId()       Returns the current record's "refund_bill_id" value
 * @method integer              getPaymentTypeId()      Returns the current record's "payment_type_id" value
 * @method string               getRefundType()         Returns the current record's "refund_type" value
 * @method string               getType()               Returns the current record's "type" value
 * @method string               getOldValue()           Returns the current record's "old_value" value
 * @method string               getNewValue()           Returns the current record's "new_value" value
 * @method integer              getRefundDesc()         Returns the current record's "refund_desc" value
 * @method string               getRefundUser()         Returns the current record's "refund_user" value
 * @method timestamp            getRefundDate()         Returns the current record's "refund_date" value
 * @method BankpaymentVatRefund setId()                 Sets the current record's "id" value
 * @method BankpaymentVatRefund setOldBankpaymentId()   Sets the current record's "old_bankpayment_id" value
 * @method BankpaymentVatRefund setBankpaymentId()      Sets the current record's "bankpayment_id" value
 * @method BankpaymentVatRefund setRefundBillId()       Sets the current record's "refund_bill_id" value
 * @method BankpaymentVatRefund setPaymentTypeId()      Sets the current record's "payment_type_id" value
 * @method BankpaymentVatRefund setRefundType()         Sets the current record's "refund_type" value
 * @method BankpaymentVatRefund setType()               Sets the current record's "type" value
 * @method BankpaymentVatRefund setOldValue()           Sets the current record's "old_value" value
 * @method BankpaymentVatRefund setNewValue()           Sets the current record's "new_value" value
 * @method BankpaymentVatRefund setRefundDesc()         Sets the current record's "refund_desc" value
 * @method BankpaymentVatRefund setRefundUser()         Sets the current record's "refund_user" value
 * @method BankpaymentVatRefund setRefundDate()         Sets the current record's "refund_date" value
 * 
 * @package    BANKGW
 * @subpackage model
 * @author     Belbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBankpaymentVatRefund extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bankpayment_vat_refund');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('old_bankpayment_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('bankpayment_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('refund_bill_id', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('payment_type_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('refund_type', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('old_value', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('new_value', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('refund_desc', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('refund_user', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('refund_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}