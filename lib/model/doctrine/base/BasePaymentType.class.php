<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PaymentType', 'transaction');

/**
 * BasePaymentType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property integer $status
 * @property timestamp $created_at
 * @property Doctrine_Collection $ConfigAssignment
 * @property Doctrine_Collection $Payment
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method integer             getStatus()           Returns the current record's "status" value
 * @method timestamp           getCreatedAt()        Returns the current record's "created_at" value
 * @method Doctrine_Collection getConfigAssignment() Returns the current record's "ConfigAssignment" collection
 * @method Doctrine_Collection getPayment()          Returns the current record's "Payment" collection
 * @method PaymentType         setId()               Sets the current record's "id" value
 * @method PaymentType         setName()             Sets the current record's "name" value
 * @method PaymentType         setDescription()      Sets the current record's "description" value
 * @method PaymentType         setStatus()           Sets the current record's "status" value
 * @method PaymentType         setCreatedAt()        Sets the current record's "created_at" value
 * @method PaymentType         setConfigAssignment() Sets the current record's "ConfigAssignment" collection
 * @method PaymentType         setPayment()          Sets the current record's "Payment" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaymentType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment_type');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('description', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ConfigAssignment', array(
             'local' => 'id',
             'foreign' => 'type_id'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}