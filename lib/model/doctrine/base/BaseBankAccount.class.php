<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BankAccount', 'transaction');

/**
 * BaseBankAccount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $bank_id
 * @property integer $company_id
 * @property integer $type
 * @property string $account
 * @property string $account_alias
 * @property string $sap_account
 * @property string $sap_gl_account
 * @property integer $status
 * @property integer $bank_code
 * @property timestamp $updated_at
 * @property Bank $Bank
 * @property Company $Company
 * 
 * @method integer     getId()             Returns the current record's "id" value
 * @method integer     getBankId()         Returns the current record's "bank_id" value
 * @method integer     getCompanyId()      Returns the current record's "company_id" value
 * @method integer     getType()           Returns the current record's "type" value
 * @method string      getAccount()        Returns the current record's "account" value
 * @method string      getAccountAlias()   Returns the current record's "account_alias" value
 * @method string      getSapAccount()     Returns the current record's "sap_account" value
 * @method string      getSapGlAccount()   Returns the current record's "sap_gl_account" value
 * @method integer     getBankCode()       Returns the current record's "bank_code" value
 * @method integer     getStatus()         Returns the current record's "status" value
 * @method timestamp   getUpdatedAt()      Returns the current record's "updated_at" value
 * @method Bank        getBank()           Returns the current record's "Bank" value
 * @method Company     getCompany()        Returns the current record's "Company" value
 * @method BankAccount setId()             Sets the current record's "id" value
 * @method BankAccount setBankId()         Sets the current record's "bank_id" value
 * @method BankAccount setCompanyId()      Sets the current record's "company_id" value
 * @method BankAccount setType()           Sets the current record's "type" value
 * @method BankAccount setAccount()        Sets the current record's "account" value
 * @method BankAccount setAccountAlias()   Sets the current record's "account_alias" value
 * @method BankAccount setSapAccount()     Sets the current record's "sap_account" value
 * @method BankAccount setSapGlAccount()   Sets the current record's "sap_gl_account" value
 * @method BankAccount setBankCode()       Sets the current record's "bank_code" value
 * @method BankAccount setStatus()         Sets the current record's "status" value
 * @method BankAccount setUpdatedAt()      Sets the current record's "updated_at" value
 * @method BankAccount setBank()           Sets the current record's "Bank" value
 * @method BankAccount setCompany()        Sets the current record's "Company" value
 * 
 * @package    BANKGW
 * @subpackage model
 * @author     Belbayar
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBankAccount extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bank_account');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('bank_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('company_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('account', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('account_alias', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('sap_account', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('sap_gl_account', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('bank_code', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('mobinet_id', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Bank', array(
             'local' => 'bank_id',
             'foreign' => 'id'));

        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id'));
    }
}