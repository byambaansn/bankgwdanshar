<?php

/**
 * BankMergeOrderTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BankMergeOrderTable extends Doctrine_Table
{

    /**
     * Returns an instance of this class.
     *
     * @return object BankMergeOrderTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BankMergeOrder');
    }

    /**
     * 
     * @param array $trans
     * @return Bankpayment|null
     */
    public static function insert($bankOrderId, $mergeId, $vendorId, $amount)
    {
        $object = new BankMergeOrder();
        $object->setBankOrderId($bankOrderId);
        $object->setMergeId($mergeId);
        $object->setVendorId($vendorId);
        $object->setMergedAmount($amount);
        $object->save();
        return $object;
    }

    /**
     * 
     * @return \sfDoctrinePager
     */
    public static function getList($dateFrom, $dateTo, $status, $bank = 0, $orderId = 0, $chargedMobile = 0, $orderedMobile = 0, $allowMerge = false)
    {
        $pdo = Doctrine_Manager::connection()->getDbh();
        $where = array();
        $where[] = "m.created_at >='$dateFrom 00:00:00'";
        $where[] = "m.created_at <='$dateTo 23:59:59'";

        if ($bank) {
            if (is_array($bank)) {
                $where[] = "bank.vendor_id IN (" . implode(',', $bank) . ")";
            } else {
                $where[] = "bank.vendor_id ='$bank'";
            }
        }
        // optional
        if ($chargedMobile) {
            $where[] = "bank.charge_mobile ='$chargedMobile'";
        }
        // optional
        if ($orderedMobile) {
            $where[] = "bank.order_mobile ='$orderedMobile'";
        }
        // optional
        if ($orderId) {
            $where[] = "bank.order_id ='$orderId'";
        }
        $where = implode(' AND ', $where);

        $bankQuery = array();
        $select = "
            m.id as id,
            m.type,
            m.created_user,
            m.created_at AS merge_created_at,
            mo.bank_order_id,
            bank.id,     
            bank.charge_mobile,     
            bank.charge_amount,     
            bank.percent,     
            bank.bank_account,
            bank.order_id,
            bank.order_p,    
            bank.order_mobile,    
            bank.order_date,
            bank.order_type,
            bank.order_type,
            bank.order_amount,
            bank.order_s,
            bank.status,
            bank.try_count,
            bank.created_at,
            bank.updated_at,
            bank.vendor_id,
            v.name as bank_name";

        $banks = array('bank_khaan', 'bank_golomt', 'bank_savings', 'bank_xac', 'bank_capital', 'bank_tdb', 'bank_candy');
        foreach ($banks as $key => $bank) {
            $bankQuery[] = "(SELECT
            $select
               FROM bank_merge m 
                   LEFT JOIN bank_merge_order mo ON m.id=mo.merge_id
                   INNER JOIN $bank bank ON bank.id=mo.bank_order_id AND mo.vendor_id=bank.vendor_id
                   LEFT JOIN vendor v ON v.id=bank.vendor_id
           WHERE $where )";
        }

        $query = implode(' UNION ALL ', $bankQuery);
        $query .= " ORDER BY 1";
//        echo $query;
//        die();
        $rows = $pdo->query($query)->fetchAll(PDO::FETCH_ASSOC);
        return $rows;
    }

}
