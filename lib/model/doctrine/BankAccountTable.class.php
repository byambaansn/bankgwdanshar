<?php

/**
 * BankAccountTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class BankAccountTable extends Doctrine_Table
{

    CONST TYPE_PRODUCT = 1;
    CONST TYPE_DEALER = 2;
    CONST TYPE_CALLPAYMET = 3;
    CONST TYPE_BAG = 4; //цүнхтэй мөнгө
    CONST TYPE_EXPENSE = 5; //зардлын данс
    CONST TYPE_OTHER = 6; //Бусад данс
    CONST TYPE_MOBIFINANCE = 7; //mobifinance данс
    CONST TYPE_BANKTOPUP = 8; //TOPUP данс
    CONST TYPE_USD = 9; //USD данс
    CONST ACTIVE = 1;

    /**
     * Returns an instance of this class.
     *
     * @return object BankAccountTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('BankAccount');
    }

    /**
     * 
     * @param int $id
     * @param int $status
     * @return BankKhaan
     */
    public static function retrieveByPK($id)
    {
        $q = Doctrine_Query::create()
                ->from('BankAccount')
                ->where('id = ?', $id);
        return $q->fetchOne();
    }

    public static function getForSelect($bankId = 0, $type = 0)
    {
        $q = Doctrine_Query::create()
                ->from('BankAccount')
                ->where('status = ?', self::ACTIVE)
                ->addWhere('account!=?', '');
        if ($bankId) {
            $q->addWhere('bank_id=?', $bankId);
        }
        if ($type) {
            if (is_array($type)) {
                $q->andWhereIn('type ', $type);
            } else {
                $q->addWhere('type=?', $type);
            }
        }

        $acounts = $q->execute();
        $arr = array();
        foreach ($acounts as $acount) {
            $arr[$acount['account']] = $acount['account'];
        }
        return $arr;
    }

    public static function getForSelectWithType($bankId = 0)
    {
        $q = Doctrine_Query::create()
                ->from('BankAccount')
                ->where('status = ?', self::ACTIVE);
        if ($bankId) {
            $q->addWhere('bank_id=?', $bankId);
        }
        $bankAccounts = BankAccountTable::getBankAccountByCred($bankId);
        if ($bankAccounts && count($bankAccounts)) {
            $q->andWhereIn('account', $bankAccounts);
        } else {
            $q->addWhere('1=2');
        }

        $acounts = $q->execute();
        $arr = array();
        foreach ($acounts as $acount) {
            $arr[$acount['type']][$acount['account']] = $acount['account'];
        }
        return $arr;
    }

    public static function getBankAccountByCred($bankId)
    {
        $user = sfContext::getInstance()->getUser();
        $accounts = null;
        if ($user->hasCredential('transaction_admin') || $user->hasCredential('transaction_payment')) {
            $accounts = BankAccountTable::getForSelect($bankId);
        } elseif ($user->hasCredential('transaction_payment_product')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_PRODUCT);
        } elseif ($user->hasCredential('transaction_payment_dealer')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_DEALER);
        } elseif ($user->hasCredential('transaction_payment_callpayment')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_CALLPAYMET);
        } elseif ($user->hasCredential('transaction_payment_bag')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_BAG);
        } elseif ($user->hasCredential('transaction_payment_expense')) {
            $accounts = BankAccountTable::getForSelect($bankId, array(BankAccountTable::TYPE_EXPENSE, BankAccountTable::TYPE_BANKTOPUP, BankAccountTable::TYPE_USD));
        } elseif ($user->hasCredential('transaction_payment_other')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_OTHER);
        } elseif ($user->hasCredential('transaction_payment_mobifinance')) {
            $accounts = BankAccountTable::getForSelect($bankId, BankAccountTable::TYPE_MOBIFINANCE);
        }
        return $accounts;
    }

    public static function getList()
    {
        $q = Doctrine_Query::create()
                ->from('BankAccount')
                ->orderBy('bank_id');
        return $q->execute();
    }

    public static function getTypes()
    {
        $types = array(
            self::TYPE_PRODUCT => 'Барааны данс',
            self::TYPE_DEALER => 'Гэрээтийн данс',
            self::TYPE_CALLPAYMET => 'Ярианы төлбөрийн данс',
            self::TYPE_BAG => 'Цүнхтэй мөнгөний данс',
            self::TYPE_EXPENSE => 'Зардлын данс',
            self::TYPE_OTHER => 'Бусад данс',
            self::TYPE_MOBIFINANCE => 'МобиФинанс данс',
            self::TYPE_BANKTOPUP => 'Банк TOPUP данс',
            self::TYPE_USD => 'Долларын данс',
        );
        return $types;
    }

    public static function getTypeName($id)
    {
        $types = self::getTypes();
        foreach ($types as $key => $type) {
            if ($key == $id) {
                return $type;
            }
        }
        return '---';
    }

    public static function getByAccount($account)
    {
        $q = Doctrine_Query::create()
                ->from('BankAccount')
                ->where('account = ?', $account);
        return $q->fetchOne();
    }
}
